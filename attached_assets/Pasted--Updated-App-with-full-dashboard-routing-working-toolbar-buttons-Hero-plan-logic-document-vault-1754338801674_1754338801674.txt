// Updated App with full dashboard routing, working toolbar buttons, Hero plan logic, document vault, and AI IEP Review modal

import React, { useState } from "react";
import { BrowserRouter as Router, Routes, Route, useNavigate } from "react-router-dom";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Dialog, DialogTrigger, DialogContent } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";

const user = {
  email: "demo@parent.com",
  plan: "hero"
};

const heroTools = [
  { name: "AI IEP Review", desc: "Comprehensive AI analysis of IEP documents", icon: "🧠" },
  { name: "IEP Goal Generator", desc: "Create measurable IEP goals", icon: "🎯" },
  { name: "Template Builder", desc: "Custom IEP templates", icon: "📄" },
  { name: "Progress Analyzer", desc: "Track progress with AI", icon: "📊" },
  { name: "Meeting Prep Assistant", desc: "Generate meeting notes", icon: "🗣️" },
  { name: "Compliance Checker", desc: "State/federal compliance", icon: "✅" },
  { name: "Accommodation Builder", desc: "Suggested modifications", icon: "⚙️" },
  { name: "Transition Planner", desc: "Post-secondary planning", icon: "📆" }
];

function Header() {
  const navigate = useNavigate();
  return (
    <header className="bg-[#2C2F48] px-6 py-4 flex justify-between text-white">
      <div className="font-bold">My IEP Hero</div>
      <div className="space-x-4">
        <Button variant="ghost" onClick={() => navigate("/")}>Dashboard</Button>
        <Button variant="ghost" onClick={() => navigate("/goals")}>Goals</Button>
        <Button variant="ghost" onClick={() => navigate("/documents")}>Documents</Button>
        <Button variant="ghost" disabled>{user.email} ({user.plan})</Button>
      </div>
    </header>
  );
}

function Dashboard() {
  const [upload, setUpload] = useState(null);
  const [modalOpen, setModalOpen] = useState(false);
  const [selectedTool, setSelectedTool] = useState(null);

  const openToolModal = (tool) => {
    setSelectedTool(tool);
    setModalOpen(true);
  };

  return (
    <div className="bg-gradient-to-b from-[#1A1B2E] to-[#2C2F48] min-h-screen text-white">
      <Header />
      <div className="p-6">
        <h1 className="text-2xl font-bold mb-2">Welcome back, demo_parent!</h1>
        <p className="mb-6">Manage your child’s IEP progress and goals with AI-powered tools</p>

        <div className="grid grid-cols-4 gap-4 mb-6">
          <Card><CardContent className="p-4">Active Goals: <strong>0</strong></CardContent></Card>
          <Card><CardContent className="p-4">Progress Rate: <strong>0%</strong></CardContent></Card>
          <Card><CardContent className="p-4">Meetings: <strong>0</strong></CardContent></Card>
          <Card><CardContent className="p-4">Documents: <strong>3</strong></CardContent></Card>
        </div>

        <h2 className="text-xl font-semibold mb-4">AI-Powered IEP Professional Tools</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
          {heroTools.map((tool) => (
            <Card key={tool.name} className="bg-[#3E4161] hover:bg-[#4A4E76] cursor-pointer" onClick={() => openToolModal(tool.name)}>
              <CardContent className="p-4">
                <div className="text-2xl mb-2">{tool.icon}</div>
                <div className="font-semibold mb-1">{tool.name}</div>
                <p className="text-sm text-slate-300">{tool.desc}</p>
                <Button className="mt-3 w-full" variant="secondary">Use Tool</Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <Dialog open={modalOpen} onOpenChange={setModalOpen}>
          <DialogContent>
            <h3 className="text-lg font-semibold mb-4">{selectedTool}</h3>
            <p className="text-sm mb-2">Upload a document to begin</p>
            <Input type="file" onChange={(e) => setUpload(e.target.files[0])} />
            <Button className="mt-4" onClick={() => alert(`Uploaded ${upload?.name || 'nothing yet'} to ${selectedTool}`)}>Submit</Button>
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
}

function DocumentVault() {
  return (
    <div className="p-6 text-white">
      <Header />
      <h2 className="text-2xl font-bold mb-4">Document Vault</h2>
      <ul className="space-y-2">
        <li className="bg-[#3E4161] p-4 rounded">📄 IEP_Report_March.pdf</li>
        <li className="bg-[#3E4161] p-4 rounded">📄 ReadingEval_Results.pdf</li>
        <li className="bg-[#3E4161] p-4 rounded">📄 Notes_AprilMeeting.pdf</li>
      </ul>
    </div>
  );
}

function GoalsPage() {
  return (
    <div className="p-6 text-white">
      <Header />
      <h2 className="text-2xl font-bold mb-4">Goals</h2>
      <p>No goals yet. Click “Add Goal” to begin tracking progress.</p>
    </div>
  );
}

export default function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Dashboard />} />
        <Route path="/documents" element={<DocumentVault />} />
        <Route path="/goals" element={<GoalsPage />} />
      </Routes>
    </Router>
  );
}