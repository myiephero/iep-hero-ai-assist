// Version adapted for dashboard-premium.tsx with Wouter, shadcn/ui, and TanStack support

import React, { useState } from "react";
import { useLocation, navigate } from "wouter";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Dialog, DialogTrigger, DialogContent } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";

const user = {
  email: "parent@demo.com",
  plan: "hero"
};

const heroTools = [
  { name: "AI IEP Review", desc: "AI analysis of IEP documents", icon: "🧠" },
  { name: "IEP Goal Generator", desc: "Generate measurable IEP goals", icon: "🎯" },
  { name: "Template Builder", desc: "Create reusable IEP templates", icon: "📄" },
  { name: "Progress Analyzer", desc: "Analyze progress & trends", icon: "📊" },
  { name: "Meeting Prep Assistant", desc: "Auto-generate meeting prep notes", icon: "🗣️" },
  { name: "Compliance Checker", desc: "Validate IEP legal compliance", icon: "✅" },
  { name: "Accommodation Builder", desc: "Generate modifications & supports", icon: "⚙️" },
  { name: "Transition Planner", desc: "Plan for post-secondary goals", icon: "📆" },
];

export default function DashboardPremium() {
  const [, setLocation] = useLocation();
  const [modalOpen, setModalOpen] = useState(false);
  const [selectedTool, setSelectedTool] = useState(null);
  const [upload, setUpload] = useState(null);

  const openToolModal = (tool) => {
    setSelectedTool(tool);
    setModalOpen(true);
  };

  return (
    <div className="bg-gradient-to-b from-[#1A1B2E] to-[#2C2F48] min-h-screen text-white">
      <div className="px-6 py-4 flex justify-between">
        <h1 className="text-xl font-bold">My IEP Hero</h1>
        <div className="space-x-4">
          <Button variant="ghost" onClick={() => setLocation("/dashboard")}>Dashboard</Button>
          <Button variant="ghost" onClick={() => setLocation("/goals")}>Goals</Button>
          <Button variant="ghost" onClick={() => setLocation("/documents")}>Documents</Button>
          <Button variant="secondary">{user.email} ({user.plan})</Button>
        </div>
      </div>

      <div className="px-6 pb-10">
        <h2 className="text-2xl font-bold mb-2">Welcome back, demo_parent!</h2>
        <p className="text-sm text-slate-300 mb-6">Manage your child’s IEP progress and goals with AI-powered tools</p>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          <Card><CardContent className="p-4">Active Goals: <strong>0</strong></CardContent></Card>
          <Card><CardContent className="p-4">Progress Rate: <strong>0%</strong></CardContent></Card>
          <Card><CardContent className="p-4">Meetings: <strong>0</strong></CardContent></Card>
          <Card><CardContent className="p-4">Documents: <strong>3</strong></CardContent></Card>
        </div>

        <h3 className="text-xl font-semibold mb-4">AI-Powered IEP Professional Tools</h3>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
          {heroTools.map((tool) => (
            <Card key={tool.name} className="bg-[#3E4161] hover:bg-[#4A4E76] cursor-pointer" onClick={() => openToolModal(tool.name)}>
              <CardContent className="p-4">
                <div className="text-2xl mb-2">{tool.icon}</div>
                <div className="font-semibold mb-1">{tool.name}</div>
                <p className="text-sm text-slate-300">{tool.desc}</p>
                <Button className="mt-3 w-full" variant="secondary">Use Tool</Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <Dialog open={modalOpen} onOpenChange={setModalOpen}>
          <DialogContent>
            <h3 className="text-lg font-semibold mb-4">{selectedTool}</h3>
            <p className="text-sm mb-2">Upload a document to begin</p>
            <Input type="file" onChange={(e) => setUpload(e.target.files[0])} />
            <Button className="mt-4" onClick={() => alert(`Uploaded ${upload?.name || 'nothing'} to ${selectedTool}`)}>Submit</Button>
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
}